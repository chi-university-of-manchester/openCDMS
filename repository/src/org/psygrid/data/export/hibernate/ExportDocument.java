/*
Copyright (c) 2006-2008, The University of Manchester, UK.

This file is part of PsyGrid.

PsyGrid is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as 
published by the Free Software Foundation, either version 3 of 
the License, or (at your option) any later version.

PsyGrid is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public 
License along with PsyGrid.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.psygrid.data.export.hibernate;

import java.util.ArrayList;
import java.util.List;

/**
 * A class to hold the document occurrence id and entry id
 * of the documents to be exported.
 * 
 * @author Lucy Bridges
 *
 * @hibernate.class table="t_export_documents"
 */
public class ExportDocument {
	/**
	 * Unique identifier, generated by the Hibernate framework
	 */
	private Long id;

	/**
	 * Version, generated by the Hibernate framework
	 */
	private int version;

	/**
	 * The id of the document occurrence to be exported
	 */
	private Long docOccId;

	/**
	 * The ids of the entries to be exported
	 */
	private List<Long> entryIds = new ArrayList<Long>();

	/**
	 * Get the unique identifier, generated by the Hibernate framework
	 * 
	 * @return The unique identifier
	 * 
	 * @hibernate.id column = "c_id" generator-class="native"
	 */
	public Long getId() {
		return id;
	}

	/**
	 * Set the unique identifier, generated by the Hibernate framework
	 * 
	 * @param id The unique identifier
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Get the version, generated by the Hibernate framework
	 * 
	 * @return The version
	 * 
	 * @hibernate.version column = "c_version"
	 */
	public int getVersion() {
		return version;
	}

	/**
	 * Set the version, generated by the Hibernate framework
	 * 
	 * @param version The version
	 */
	public void setVersion(int version) {
		this.version = version;
	}

	/**
	 * Get the id for the document occurrence.
	 * 
	 * @return The document occurrence identifier
	 * 
	 * @hibernate.property column = "c_dococc_id" 
	 */
	public Long getDocOccId() {
		return docOccId;
	}

	/**
	 * Set the id for the document occurrence.
	 * 
	 * @param docOccId
	 */
	public void setDocOccId(Long docOccId) {
		this.docOccId = docOccId;
	}

	/**
	 * Get the entry ids to be exported for this document occurrence
	 * 
	 * @return entryIds
	 * 
	 * @hibernate.list table="t_ex_docs_entries"
	 *                 cascade="all"
	 * @hibernate.key column="c_ex_entries_id"
	 * @hibernate.list-index column="c_index"
	 * @hibernate.element type="long"
	 *                    column="c_entry"
	 *                    not-null="true"
	 */
	public List<Long> getEntryIds() {
		return entryIds;
	}

	/**
	 * Set the entry ids to be exported for this document occurrence
	 * 
	 * @param entryIds
	 */
	public void setEntryIds(List<Long> entryIds) {
		this.entryIds = entryIds;
	}

	/**
	 * Add an entry id for an entry that is to be exported as part of
	 * this document occurrence.
	 * 
	 * @param entryId
	 */
	public void addEntryId(Long entryId) {
		if (this.entryIds == null) {
			entryIds = new ArrayList<Long>();
		}
		this.entryIds.add(entryId);
	}

	public org.psygrid.data.export.dto.ExportDocument toDTO(){
		org.psygrid.data.export.dto.ExportDocument dtoED = new org.psygrid.data.export.dto.ExportDocument();
		dtoED.setId(this.id);
		dtoED.setVersion(this.version);
		dtoED.setDocOccId(this.docOccId);
		long[] entries = new long[this.entryIds.size()];
		for (int i = 0; i < this.entryIds.size(); i++) {
			entries[i] = this.entryIds.get(i);
		}
		dtoED.setEntryIds(entries);
		return dtoED;
	}
}
