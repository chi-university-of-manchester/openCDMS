/*
Copyright (c) 2006-2008, The University of Manchester, UK.

This file is part of PsyGrid.

PsyGrid is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as 
published by the Free Software Foundation, either version 3 of 
the License, or (at your option) any later version.

PsyGrid is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public 
License along with PsyGrid.  If not, see <http://www.gnu.org/licenses/>.
*/

package org.psygrid.esl.model.dto;

import java.util.Map;


/**
 * The base class for all classes intended to be persisted by
 * Hibernate.
 * 
 * Making all persistable classes sub-classes of Persistent ensures
 * that all persisted objects have a unique identifier, which is not
 * dependent on the class of the object.
 * 
 * @author Rob Harper
 * 
 */
public abstract class Persistent {

	/**
	 * Unique identifier, generated by the Hibernate framework
	 */
	protected Long id;
	
	/**
	 * Version, generated by the Hibernate framework
	 */
	protected int version;
	
	/**
	 * Default no-arg constructor, as required by the Hibernate framework
	 * for all persistable classes
	 */
	public Persistent(){};

	/**
	 * Get the unique identifier, generated by the Hibernate framework
	 * 
	 * @return The unique identifier
	 * 
	 */
	public Long getId() {
		return id;
	}

	/**
	 * Set the unique identifier, generated by the Hibernate framework
	 * 
	 * @param id The unique identifier
	 */
	public void setId(Long id) {
		this.id = id;
	}

	/**
	 * Get the version, generated by the Hibernate framework
	 * 
	 * @return The version
	 */
    public int getVersion() {
		return version;
	}

	/**
	 * Set the version, generated by the Hibernate framework
	 * 
	 * @param version The version
	 */
    public void setVersion(int version) {
		this.version = version;
	}

    public abstract org.psygrid.esl.model.hibernate.Persistent toHibernate(Map<Persistent, org.psygrid.esl.model.hibernate.Persistent> hRefs);
    
    public void toHibernate(org.psygrid.esl.model.hibernate.Persistent hP, Map<Persistent, org.psygrid.esl.model.hibernate.Persistent> hRefs){
        hP.setId(this.id);
        hP.setVersion(this.version);
    }
    
}
